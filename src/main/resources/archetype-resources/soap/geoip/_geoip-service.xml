<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="geoipservice" resourceRoot="" soapui-version="4.5.2" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="GeoIPService TestSuite"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="GetGeoIP TestCase"/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="GeoIPServiceSoap12" type="wsdl" bindingName="{http://www.webservicex.net/}GeoIPServiceSoap12" soapVersion="1_2" anonymous="optional" definition="http://www.webservicex.net/geoipservice.asmx?WSDL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://www.webservicex.net/geoipservice.asmx?WSDL"><con:part><con:url>http://www.webservicex.net/geoipservice.asmx?WSDL</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.webservicex.net/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://www.webservicex.net/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://www.webservicex.net/">
      <s:element name="GetGeoIP">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="IPAddress" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetGeoIPResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetGeoIPResult" type="tns:GeoIP"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="GeoIP">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="ReturnCode" type="s:int"/>
          <s:element minOccurs="0" maxOccurs="1" name="IP" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="ReturnCodeDetails" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="CountryName" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="CountryCode" type="s:string"/>
        </s:sequence>
      </s:complexType>
      <s:element name="GetGeoIPContext">
        <s:complexType/>
      </s:element>
      <s:element name="GetGeoIPContextResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetGeoIPContextResult" type="tns:GeoIP"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GeoIP" nillable="true" type="tns:GeoIP"/>
    </s:schema>
  </wsdl:types>
  <wsdl:message name="GetGeoIPSoapIn">
    <wsdl:part name="parameters" element="tns:GetGeoIP"/>
  </wsdl:message>
  <wsdl:message name="GetGeoIPSoapOut">
    <wsdl:part name="parameters" element="tns:GetGeoIPResponse"/>
  </wsdl:message>
  <wsdl:message name="GetGeoIPContextSoapIn">
    <wsdl:part name="parameters" element="tns:GetGeoIPContext"/>
  </wsdl:message>
  <wsdl:message name="GetGeoIPContextSoapOut">
    <wsdl:part name="parameters" element="tns:GetGeoIPContextResponse"/>
  </wsdl:message>
  <wsdl:message name="GetGeoIPHttpGetIn">
    <wsdl:part name="IPAddress" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetGeoIPHttpGetOut">
    <wsdl:part name="Body" element="tns:GeoIP"/>
  </wsdl:message>
  <wsdl:message name="GetGeoIPContextHttpGetIn"/>
  <wsdl:message name="GetGeoIPContextHttpGetOut">
    <wsdl:part name="Body" element="tns:GeoIP"/>
  </wsdl:message>
  <wsdl:message name="GetGeoIPHttpPostIn">
    <wsdl:part name="IPAddress" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetGeoIPHttpPostOut">
    <wsdl:part name="Body" element="tns:GeoIP"/>
  </wsdl:message>
  <wsdl:message name="GetGeoIPContextHttpPostIn"/>
  <wsdl:message name="GetGeoIPContextHttpPostOut">
    <wsdl:part name="Body" element="tns:GeoIP"/>
  </wsdl:message>
  <wsdl:portType name="GeoIPServiceSoap">
    <wsdl:operation name="GetGeoIP">
      <wsdl:documentation>GeoIPService - GetGeoIP enables you to easily look up countries by IP addresses</wsdl:documentation>
      <wsdl:input message="tns:GetGeoIPSoapIn"/>
      <wsdl:output message="tns:GetGeoIPSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetGeoIPContext">
      <wsdl:documentation>GeoIPService - GetGeoIPContext enables you to easily look up countries by Context</wsdl:documentation>
      <wsdl:input message="tns:GetGeoIPContextSoapIn"/>
      <wsdl:output message="tns:GetGeoIPContextSoapOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="GeoIPServiceHttpGet">
    <wsdl:operation name="GetGeoIP">
      <wsdl:documentation>GeoIPService - GetGeoIP enables you to easily look up countries by IP addresses</wsdl:documentation>
      <wsdl:input message="tns:GetGeoIPHttpGetIn"/>
      <wsdl:output message="tns:GetGeoIPHttpGetOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetGeoIPContext">
      <wsdl:documentation>GeoIPService - GetGeoIPContext enables you to easily look up countries by Context</wsdl:documentation>
      <wsdl:input message="tns:GetGeoIPContextHttpGetIn"/>
      <wsdl:output message="tns:GetGeoIPContextHttpGetOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="GeoIPServiceHttpPost">
    <wsdl:operation name="GetGeoIP">
      <wsdl:documentation>GeoIPService - GetGeoIP enables you to easily look up countries by IP addresses</wsdl:documentation>
      <wsdl:input message="tns:GetGeoIPHttpPostIn"/>
      <wsdl:output message="tns:GetGeoIPHttpPostOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetGeoIPContext">
      <wsdl:documentation>GeoIPService - GetGeoIPContext enables you to easily look up countries by Context</wsdl:documentation>
      <wsdl:input message="tns:GetGeoIPContextHttpPostIn"/>
      <wsdl:output message="tns:GetGeoIPContextHttpPostOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="GeoIPServiceSoap" type="tns:GeoIPServiceSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetGeoIP">
      <soap:operation soapAction="http://www.webservicex.net/GetGeoIP" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetGeoIPContext">
      <soap:operation soapAction="http://www.webservicex.net/GetGeoIPContext" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="GeoIPServiceSoap12" type="tns:GeoIPServiceSoap">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetGeoIP">
      <soap12:operation soapAction="http://www.webservicex.net/GetGeoIP" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetGeoIPContext">
      <soap12:operation soapAction="http://www.webservicex.net/GetGeoIPContext" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="GeoIPServiceHttpGet" type="tns:GeoIPServiceHttpGet">
    <http:binding verb="GET"/>
    <wsdl:operation name="GetGeoIP">
      <http:operation location="/GetGeoIP"/>
      <wsdl:input>
        <http:urlEncoded/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetGeoIPContext">
      <http:operation location="/GetGeoIPContext"/>
      <wsdl:input>
        <http:urlEncoded/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="GeoIPServiceHttpPost" type="tns:GeoIPServiceHttpPost">
    <http:binding verb="POST"/>
    <wsdl:operation name="GetGeoIP">
      <http:operation location="/GetGeoIP"/>
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetGeoIPContext">
      <http:operation location="/GetGeoIPContext"/>
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="GeoIPService">
    <wsdl:port name="GeoIPServiceSoap" binding="tns:GeoIPServiceSoap">
      <soap:address location="http://www.webservicex.net/geoipservice.asmx"/>
    </wsdl:port>
    <wsdl:port name="GeoIPServiceSoap12" binding="tns:GeoIPServiceSoap12">
      <soap12:address location="http://www.webservicex.net/geoipservice.asmx"/>
    </wsdl:port>
    <wsdl:port name="GeoIPServiceHttpGet" binding="tns:GeoIPServiceHttpGet">
      <http:address location="http://www.webservicex.net/geoipservice.asmx"/>
    </wsdl:port>
    <wsdl:port name="GeoIPServiceHttpPost" binding="tns:GeoIPServiceHttpPost">
      <http:address location="http://www.webservicex.net/geoipservice.asmx"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://www.webservicex.net/geoipservice.asmx</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://www.webservicex.net/GetGeoIP" name="GetGeoIP" bindingOperationName="GetGeoIP" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/geoipservice.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.webservicex.net/">
   <soap:Header/>
   <soap:Body>
      <web:GetGeoIP>
         <!--Optional:-->
         <web:IPAddress>?</web:IPAddress>
      </web:GetGeoIP>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.webservicex.net/GeoIPServiceSoap/GetGeoIPRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.webservicex.net/GetGeoIPContext" name="GetGeoIPContext" bindingOperationName="GetGeoIPContext" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/geoipservice.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.webservicex.net/">
   <soap:Header/>
   <soap:Body>
      <web:GetGeoIPContext/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.webservicex.net/GeoIPServiceSoap/GetGeoIPContextRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:testSuite name="GeoIPService TestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetGeoIP TestCase" searchProperties="true"><con:settings/><con:testStep type="properties" name="Temp.properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>t_ip</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>t_country_code</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>t_country_name</con:name><con:value xsi:nil="true"/></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="Testdata.properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>country_name</con:name><con:value>Australia</con:value></con:property><con:property><con:name>country_code</con:name><con:value>AUS</con:value></con:property><con:property><con:name>ip</con:name><con:value>1.1.1.2</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="Config.properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>endpoint</con:name><con:value>http://www.webservicex.net/geoipservice.asmx</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Init_Properties"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// ************* Properties initialization *************
def configPropertiesKey = "Config.properties";
def configPropertiesFile =  new File(System.getProperty("projroot"),configPropertiesKey); 
if(!configPropertiesFile.exists())
{
	configPropertiesFile.createNewFile();
}
def configProperties = new Properties()
configProperties.load new FileReader(configPropertiesFile)
configProperties.each { prop,val -> 
	log.info prop
	 testRunner.testCase.testSteps[configPropertiesKey].setPropertyValue(prop, val)
}

def testdataPropertiesKey = "Testdata.properties";
def testdataPropertiesFile =  new File(System.getProperty("projroot"),testdataPropertiesKey);
if(!testdataPropertiesFile.exists())
{
	testdataPropertiesFile.createNewFile();
}
def testdataProperties = new Properties()
testdataProperties.load new FileReader(testdataPropertiesFile)
testdataProperties.each { prop,val -> 
	 testRunner.testCase.testSteps[testdataPropertiesKey].setPropertyValue(prop, val)
}

def tempPropertiesKey = "Temp.properties";
def tempPropertiesFile =  new File(System.getProperty("projroot"),tempPropertiesKey);
if(tempPropertiesFile.exists())
{
	tempPropertiesFile.delete();
}
tempPropertiesFile.createNewFile();
testRunner.testCase.testSteps[tempPropertiesKey].clearPropertyValues()
</script></con:config></con:testStep><con:testStep type="request" name="GetGeoIPContext"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GeoIPServiceSoap12</con:interface><con:operation>GetGeoIPContext</con:operation><con:request name="GetGeoIPContext"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/geoipservice.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.webservicex.net/">
   <soap:Header/>
   <soap:Body>
      <web:GetGeoIPContext/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Init_Transfere_Keys"><con:settings/><con:config><script>def tempPropertiesKey = "Temp.properties";
 testRunner.testCase.testSteps[tempPropertiesKey].setPropertyValue("t_ip", "");
 testRunner.testCase.testSteps[tempPropertiesKey].setPropertyValue("t_country_code", "");
 testRunner.testCase.testSteps[tempPropertiesKey].setPropertyValue("t_country_name", "");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfere_Properties"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="true" entitize="true" transferChildNodes="false" disabled="false"><con:name>t_ip</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetGeoIPContext</con:sourceStep><con:sourcePath>declare namespace soap='http://www.w3.org/2003/05/soap-envelope';
declare namespace ns1='http://www.webservicex.net/';
//ns1:GetGeoIPContextResponse//ns1:IP</con:sourcePath><con:targetType>t_ip</con:targetType><con:targetStep>Temp.properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="true"><con:name>t_country_code</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetGeoIPContext</con:sourceStep><con:sourcePath>declare namespace soap='http://www.w3.org/2003/05/soap-envelope';
declare namespace ns1='http://www.webservicex.net/';
//ns1:GetGeoIPContextResponse//ns1:CountryCode</con:sourcePath><con:targetType>t_country_code</con:targetType><con:targetStep>Temp.properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false"><con:name>t_country_name</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GetGeoIPContext</con:sourceStep><con:sourcePath>declare namespace soap='http://www.w3.org/2003/05/soap-envelope';
declare namespace ns1='http://www.webservicex.net/';
//ns1:GetGeoIPContextResponse//ns1:CountryName</con:sourcePath><con:targetType>t_country_name</con:targetType><con:targetStep>Temp.properties</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="request" name="GetGeoIP-Testdata.properties"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GeoIPServiceSoap12</con:interface><con:operation>GetGeoIP</con:operation><con:request name="GetGeoIP-Testdata.properties"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/geoipservice.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.webservicex.net/">
   <soap:Header/>
   <soap:Body>
      <web:GetGeoIP>
         <!--Optional:-->
         <web:IPAddress>${Testdata.properties#ip}</web:IPAddress>
      </web:GetGeoIP>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault"/><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>Invalid IP address</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check IP"><con:configuration><path>declare namespace soap='http://www.w3.org/2003/05/soap-envelope';
declare namespace ns1='http://www.webservicex.net/';
//ns1:GetGeoIPResponse//ns1:IP</path><content>${Testdata.properties#ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match"><con:configuration/></con:assertion><con:assertion type="XPath Match" name="Check Country Code"><con:configuration><path>declare namespace soap='http://www.w3.org/2003/05/soap-envelope';
declare namespace ns1='http://www.webservicex.net/';
//ns1:GetGeoIPResponse//ns1:CountryCode</path><content>${Testdata.properties#country_code}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check Country Name"><con:configuration><path>declare namespace soap='http://www.w3.org/2003/05/soap-envelope';
declare namespace ns1='http://www.webservicex.net/';
//ns1:GetGeoIPResponse//ns1:CountryName</path><content>${Testdata.properties#country_name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://www.webservicex.net/GeoIPServiceSoap/GetGeoIPRequest" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="GetGeoIP-Temp.properties"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GeoIPServiceSoap12</con:interface><con:operation>GetGeoIP</con:operation><con:request name="GetGeoIP-Temp.properties"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/geoipservice.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.webservicex.net/">
   <soap:Header/>
   <soap:Body>
      <web:GetGeoIP>
         <!--Optional:-->
         <web:IPAddress>${Temp.properties#t_ip}</web:IPAddress>
      </web:GetGeoIP>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault"/><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>Invalid IP address</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check IP"><con:configuration><path>declare namespace soap='http://www.w3.org/2003/05/soap-envelope';
declare namespace ns1='http://www.webservicex.net/';
//ns1:GetGeoIPResponse//ns1:IP</path><content>${Temp.properties#t_ip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match"><con:configuration/></con:assertion><con:assertion type="XPath Match" name="Check Country Code"><con:configuration><path>declare namespace soap='http://www.w3.org/2003/05/soap-envelope';
declare namespace ns1='http://www.webservicex.net/';
//ns1:GetGeoIPResponse//ns1:CountryCode</path><content>${Temp.properties#t_country_code}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check Country Name"><con:configuration><path>declare namespace soap='http://www.w3.org/2003/05/soap-envelope';
declare namespace ns1='http://www.webservicex.net/';
//ns1:GetGeoIPResponse//ns1:CountryName</path><content>${Temp.properties#t_country_name}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://www.webservicex.net/GeoIPServiceSoap/GetGeoIPRequest" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Store_Temp_Properties"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

def tempPropertiesKey = "Temp.properties";
def tempPropertiesFile =  new File(System.getProperty("projroot"),tempPropertiesKey);

tempPropertiesFile << ("\r\n")
tempPropertiesFile << ("ip=" + testRunner.testCase.testSteps[tempPropertiesKey].getPropertyValue("t_ip"))
tempPropertiesFile << ("\r\n")
tempPropertiesFile << ("country_code=" + testRunner.testCase.testSteps[tempPropertiesKey].getPropertyValue("t_country_code"))
tempPropertiesFile << ("\r\n")
tempPropertiesFile << ("country_name=" + testRunner.testCase.testSteps[tempPropertiesKey].getPropertyValue("t_country_name"))]]></script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>test</con:name><con:value>1123</con:value></con:property></con:properties><con:wssContainer/></con:soapui-project>